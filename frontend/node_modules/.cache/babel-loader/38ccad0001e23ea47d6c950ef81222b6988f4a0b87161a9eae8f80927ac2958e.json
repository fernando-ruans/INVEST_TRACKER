{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ferna\\\\INVEST_TRACKER\\\\frontend\\\\src\\\\components\\\\TradingViewChart.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, memo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TradingViewChart = ({\n  symbol,\n  width = '100%',\n  height = 400,\n  interval = 'D',\n  theme = 'light',\n  style = '1',\n  locale = 'pt_BR',\n  timezone = 'America/Sao_Paulo',\n  toolbar_bg = '#f1f3f6',\n  enable_publishing = false,\n  withdateranges = true,\n  hide_side_toolbar = false,\n  allow_symbol_change = true,\n  save_image = false,\n  className = '',\n  // Novas op√ß√µes avan√ßadas\n  studies = [],\n  drawings_access = true,\n  show_popup_button = true,\n  studies_overrides = {},\n  time_frames = [{\n    text: '1D',\n    resolution: '1'\n  }, {\n    text: '1W',\n    resolution: 'W'\n  }, {\n    text: '1M',\n    resolution: 'M'\n  }],\n  charts_storage_url = 'https://saveload.tradingview.com',\n  charts_storage_api_version = '1.1',\n  client_id = 'investtracker.app',\n  user_id = 'public_user',\n  fullscreen = false,\n  autosize = true,\n  container_id,\n  hide_top_toolbar = false,\n  enabled_features = [],\n  disabled_features = []\n}) => {\n  _s();\n  const containerRef = useRef(null);\n  const scriptRef = useRef(null);\n  const widgetRef = useRef(null);\n  useEffect(() => {\n    // Limpar widget anterior se existir\n    if (widgetRef.current) {\n      try {\n        widgetRef.current.remove();\n      } catch (error) {\n        console.warn('Erro ao remover widget anterior:', error);\n      }\n    }\n\n    // Limpar container\n    if (containerRef.current) {\n      containerRef.current.innerHTML = '';\n    }\n\n    // Fun√ß√£o para criar o widget\n    const createWidget = () => {\n      if (!containerRef.current || !window.TradingView) {\n        console.warn('TradingView n√£o dispon√≠vel ou container n√£o encontrado');\n        return;\n      }\n      try {\n        // Aguardar um pouco para garantir que o DOM est√° pronto\n        setTimeout(() => {\n          if (!containerRef.current) return;\n\n          // Configura√ß√µes avan√ßadas para o TradingView\n          const config = {\n            autosize: autosize,\n            symbol: symbol,\n            interval: interval,\n            timezone: timezone,\n            theme: theme,\n            style: style,\n            locale: locale,\n            toolbar_bg: toolbar_bg,\n            enable_publishing: enable_publishing,\n            withdateranges: withdateranges,\n            hide_side_toolbar: hide_side_toolbar,\n            allow_symbol_change: allow_symbol_change,\n            save_image: save_image,\n            container_id: containerRef.current.id,\n            width: width,\n            height: height,\n            fullscreen: fullscreen,\n            hide_top_toolbar: hide_top_toolbar,\n            show_popup_button: show_popup_button,\n            time_frames: time_frames,\n            enabled_features: ['study_templates', 'use_localstorage_for_settings', 'chart_property_page_trading', 'chart_property_page_scales', 'chart_property_page_style', 'chart_property_page_background', 'chart_property_page_timezone_sessions', 'chart_property_page_events', 'create_volume_indicator_by_default', ...enabled_features],\n            disabled_features: disabled_features,\n            charts_storage_url: charts_storage_url,\n            charts_storage_api_version: charts_storage_api_version,\n            client_id: client_id,\n            user_id: user_id,\n            studies_overrides: studies_overrides\n          };\n\n          // Criar o widget\n          widgetRef.current = new window.TradingView.widget(config);\n\n          // Adicionar indicadores t√©cnicos se especificados\n          if (studies.length > 0 && widgetRef.current) {\n            widgetRef.current.onChartReady(() => {\n              studies.forEach(study => {\n                widgetRef.current.chart().createStudy(study);\n              });\n            });\n          }\n        }, 100);\n      } catch (error) {\n        console.error('Erro ao criar widget TradingView:', error);\n        // Mostrar mensagem de erro no container\n        if (containerRef.current) {\n          containerRef.current.innerHTML = `\n            <div style=\"display: flex; align-items: center; justify-content: center; height: 100%; background: #f8f9fa; border: 1px solid #dee2e6; border-radius: 4px;\">\n              <div style=\"text-align: center; color: #6c757d;\">\n                <div style=\"font-size: 24px; margin-bottom: 8px;\">üìä</div>\n                <div>Gr√°fico indispon√≠vel</div>\n                <div style=\"font-size: 12px; margin-top: 4px;\">Erro ao carregar TradingView</div>\n              </div>\n            </div>\n          `;\n        }\n      }\n    };\n\n    // Verificar se o script do TradingView j√° foi carregado\n    if (window.TradingView) {\n      createWidget();\n    } else {\n      // Verificar se j√° existe um script sendo carregado\n      const existingScript = document.querySelector('script[src=\"https://s3.tradingview.com/tv.js\"]');\n      if (existingScript) {\n        // Script j√° existe, aguardar carregamento\n        existingScript.addEventListener('load', createWidget);\n      } else {\n        // Carregar script do TradingView\n        const script = document.createElement('script');\n        script.src = 'https://s3.tradingview.com/tv.js';\n        script.async = true;\n        script.onload = createWidget;\n        script.onerror = () => {\n          console.error('Erro ao carregar script do TradingView');\n          // Mostrar mensagem de erro\n          if (containerRef.current) {\n            containerRef.current.innerHTML = `\n              <div style=\"display: flex; align-items: center; justify-content: center; height: 100%; background: #f8f9fa; border: 1px solid #dee2e6; border-radius: 4px;\">\n                <div style=\"text-align: center; color: #6c757d;\">\n                  <div style=\"font-size: 24px; margin-bottom: 8px;\">‚ö†Ô∏è</div>\n                  <div>Erro de conex√£o</div>\n                  <div style=\"font-size: 12px; margin-top: 4px;\">N√£o foi poss√≠vel carregar o TradingView</div>\n                </div>\n              </div>\n            `;\n          }\n        };\n        document.head.appendChild(script);\n        scriptRef.current = script;\n      }\n    }\n\n    // Cleanup\n    return () => {\n      if (widgetRef.current) {\n        try {\n          widgetRef.current.remove();\n        } catch (error) {\n          console.warn('Erro ao limpar widget:', error);\n        }\n      }\n    };\n  }, [symbol, interval, theme, style, width, height, studies, enabled_features, disabled_features]);\n\n  // Gerar ID √∫nico para o container\n  const containerId = container_id || `tradingview_${symbol.replace(/[^a-zA-Z0-9]/g, '_')}_${Date.now()}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `tradingview-widget-container ${className}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      id: containerId,\n      className: \"tradingview-widget\",\n      style: {\n        width: typeof width === 'number' ? `${width}px` : width,\n        height: typeof height === 'number' ? `${height}px` : height\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tradingview-widget-copyright\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `https://www.tradingview.com/symbols/${symbol}/`,\n        rel: \"noopener nofollow\",\n        target: \"_blank\",\n        className: \"text-xs text-gray-500 hover:text-gray-700\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"blue-text\",\n          children: symbol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), \" por TradingView\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 5\n  }, this);\n};\n\n// Componente simplificado para gr√°fico b√°sico\n_s(TradingViewChart, \"OqmDIgEUW/FS/DN8+SXCLpwc1xI=\");\n_c = TradingViewChart;\nexport const SimpleTradingViewChart = ({\n  symbol,\n  height = 300,\n  theme = 'light'\n}) => {\n  // Valida√ß√£o do s√≠mbolo\n  if (!symbol || symbol.trim() === '') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center bg-gray-50 border border-gray-200 rounded-lg\",\n      style: {\n        height\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-4xl mb-4\",\n          children: \"\\uD83D\\uDCCA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500\",\n          children: \"S\\xEDmbolo inv\\xE1lido\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Converter s√≠mbolos brasileiros para formato TradingView\n  const formatSymbolForTradingView = inputSymbol => {\n    const cleanSymbol = inputSymbol.trim().toUpperCase();\n\n    // Mapeamento de s√≠mbolos para TradingView\n    const symbolMap = {\n      // √çndices Brasileiros\n      'IBOVESPA': 'BMFBOVESPA:IBOV',\n      'IFIX': 'BMFBOVESPA:IFIX',\n      'SMLL': 'BMFBOVESPA:SMLL',\n      'IDIV': 'BMFBOVESPA:IDIV',\n      // A√ß√µes Brasileiras\n      'BOVA11': 'BMFBOVESPA:BOVA11',\n      'PETR4': 'BMFBOVESPA:PETR4',\n      'VALE3': 'BMFBOVESPA:VALE3',\n      'ITUB4': 'BMFBOVESPA:ITUB4',\n      'BBDC4': 'BMFBOVESPA:BBDC4',\n      // Commodities - Metais Preciosos\n      'GC=F': 'COMEX:GC1!',\n      'SI=F': 'COMEX:SI1!',\n      'PL=F': 'NYMEX:PL1!',\n      'PA=F': 'NYMEX:PA1!',\n      // Commodities - Energia\n      'CL=F': 'NYMEX:CL1!',\n      'BZ=F': 'ICE:BRN1!',\n      'NG=F': 'NYMEX:NG1!',\n      // Commodities - Metais Industriais\n      'HG=F': 'COMEX:HG1!',\n      // Commodities - Agricultura\n      'ZC=F': 'CBOT:ZC1!',\n      'ZS=F': 'CBOT:ZS1!',\n      'ZW=F': 'CBOT:ZW1!',\n      'KC=F': 'ICEUS:KC1!',\n      'SB=F': 'ICEUS:SB1!',\n      'CC=F': 'ICEUS:CC1!',\n      'CT=F': 'ICEUS:CT1!',\n      'OJ=F': 'ICEUS:OJ1!',\n      // Commodities - Outros\n      'LBS=F': 'CME:LBS1!',\n      // Criptomoedas\n      'BTC-USD': 'BINANCE:BTCUSDT',\n      'ETH-USD': 'BINANCE:ETHUSDT',\n      'BNB-USD': 'BINANCE:BNBUSDT',\n      'ADA-USD': 'BINANCE:ADAUSDT',\n      'SOL-USD': 'BINANCE:SOLUSDT',\n      'XRP-USD': 'BINANCE:XRPUSDT',\n      'DOT-USD': 'BINANCE:DOTUSDT',\n      'DOGE-USD': 'BINANCE:DOGEUSDT',\n      'AVAX-USD': 'BINANCE:AVAXUSDT',\n      'MATIC-USD': 'BINANCE:MATICUSDT',\n      // Forex\n      'EURUSD=X': 'FX:EURUSD',\n      'GBPUSD=X': 'FX:GBPUSD',\n      'USDJPY=X': 'FX:USDJPY',\n      'USDCAD=X': 'FX:USDCAD',\n      'AUDUSD=X': 'FX:AUDUSD',\n      'USDBRL=X': 'FX:USDBRL',\n      'EURBRL=X': 'FX:EURBRL',\n      // √çndices Internacionais\n      '^GSPC': 'SP:SPX',\n      '^DJI': 'DJ:DJI',\n      '^IXIC': 'NASDAQ:IXIC',\n      '^FTSE': 'FTSE:UKX',\n      '^GDAXI': 'XETR:DAX',\n      '^N225': 'TVC:NI225',\n      '^HSI': 'HSI:HSI',\n      // T√≠tulos e Bonds\n      '^TNX': 'TVC:TNX',\n      '^FVX': 'TVC:FVX',\n      '^IRX': 'TVC:IRX',\n      '^TYX': 'TVC:TYX',\n      // Forex Adicional\n      'USDCHF=X': 'FX:USDCHF',\n      'NZDUSD=X': 'FX:NZDUSD',\n      'EURJPY=X': 'FX:EURJPY',\n      'GBPJPY=X': 'FX:GBPJPY',\n      'EURGBP=X': 'FX:EURGBP',\n      // Futuros BMF (B3)\n      'WDO=F': 'BMFBOVESPA:WDO1!',\n      'DOL=F': 'BMFBOVESPA:DOL1!',\n      'WIN=F': 'BMFBOVESPA:WIN1!',\n      'IND=F': 'BMFBOVESPA:IND1!',\n      'BGI=F': 'BMFBOVESPA:BGI1!',\n      'CCM=F': 'BMFBOVESPA:CCM1!',\n      'ICF=F': 'BMFBOVESPA:ICF1!',\n      'DI1=F': 'BMFBOVESPA:DI11!'\n    };\n\n    // Se o s√≠mbolo j√° tem prefixo, usar como est√°\n    if (cleanSymbol.includes(':')) {\n      return cleanSymbol;\n    }\n\n    // Se est√° no mapeamento, usar o valor mapeado\n    if (symbolMap[cleanSymbol]) {\n      return symbolMap[cleanSymbol];\n    }\n\n    // Se termina com .SA, converter para formato BMFBOVESPA\n    if (cleanSymbol.endsWith('.SA')) {\n      const baseSymbol = cleanSymbol.replace('.SA', '');\n      return `BMFBOVESPA:${baseSymbol}`;\n    }\n\n    // Para outros s√≠mbolos brasileiros, assumir BMFBOVESPA\n    if (cleanSymbol.match(/^[A-Z]{4}[0-9]{1,2}$/)) {\n      return `BMFBOVESPA:${cleanSymbol}`;\n    }\n\n    // Retornar como est√° para s√≠mbolos internacionais\n    return cleanSymbol;\n  };\n  const formattedSymbol = formatSymbolForTradingView(symbol);\n  return /*#__PURE__*/_jsxDEV(TradingViewChart, {\n    symbol: formattedSymbol,\n    height: height,\n    theme: theme,\n    hide_side_toolbar: true,\n    withdateranges: false,\n    allow_symbol_change: false,\n    save_image: false,\n    enable_publishing: false\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 400,\n    columnNumber: 5\n  }, this);\n};\n\n// Componente para gr√°fico avan√ßado\n_c2 = SimpleTradingViewChart;\nexport const AdvancedTradingViewChart = ({\n  symbol,\n  height = 500,\n  theme = 'light',\n  interval = 'D',\n  studies = []\n}) => {\n  // Indicadores t√©cnicos comuns\n  const defaultStudies = studies.length > 0 ? studies : ['Volume', 'Moving Average Exponential@tv-basicstudies'];\n\n  // Configura√ß√µes avan√ßadas para o gr√°fico\n  const studiesOverrides = {\n    'volume.volume.color.0': 'rgba(255, 82, 82, 0.5)',\n    'volume.volume.color.1': 'rgba(76, 175, 80, 0.5)',\n    'volume.volume.transparency': 50,\n    'volume.volume ma.color': '#FF9800',\n    'volume.volume ma.transparency': 30,\n    'volume.volume ma.linewidth': 2,\n    'volume.show ma': true,\n    'volume.options.showStudyArguments': true,\n    'moving average exponential.length': 21,\n    'moving average exponential.plottype': 'line'\n  };\n  return /*#__PURE__*/_jsxDEV(TradingViewChart, {\n    symbol: symbol,\n    height: height,\n    theme: theme,\n    interval: interval,\n    hide_side_toolbar: false,\n    withdateranges: true,\n    allow_symbol_change: true,\n    save_image: true,\n    enable_publishing: false,\n    studies: defaultStudies,\n    studies_overrides: studiesOverrides,\n    enabled_features: ['study_templates', 'use_localstorage_for_settings', 'create_volume_indicator_by_default', 'header_widget', 'left_toolbar', 'control_bar', 'timeframes_toolbar', 'display_market_status', 'legend_widget', 'header_chart_type', 'header_compare', 'header_indicators', 'header_settings', 'header_screenshot', 'header_fullscreen_button', 'show_chart_property_page', 'property_pages'],\n    time_frames: [{\n      text: '1D',\n      resolution: '1'\n    }, {\n      text: '1W',\n      resolution: 'W'\n    }, {\n      text: '1M',\n      resolution: 'M'\n    }, {\n      text: '3M',\n      resolution: '3M'\n    }, {\n      text: '6M',\n      resolution: '6M'\n    }, {\n      text: 'YTD',\n      resolution: '12M'\n    }, {\n      text: '1Y',\n      resolution: '12M'\n    }, {\n      text: '5Y',\n      resolution: '60M'\n    }, {\n      text: 'ALL',\n      resolution: 'ALL'\n    }]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 442,\n    columnNumber: 5\n  }, this);\n};\n\n// Componente para mini gr√°fico\n_c3 = AdvancedTradingViewChart;\nexport const MiniTradingViewChart = ({\n  symbol,\n  width = 300,\n  height = 200,\n  theme = 'light'\n}) => {\n  return /*#__PURE__*/_jsxDEV(TradingViewChart, {\n    symbol: symbol,\n    width: width,\n    height: height,\n    theme: theme,\n    hide_side_toolbar: true,\n    withdateranges: false,\n    allow_symbol_change: false,\n    save_image: false,\n    enable_publishing: false,\n    style: \"2\" // √Årea\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 496,\n    columnNumber: 5\n  }, this);\n};\n\n// Declara√ß√£o de tipos para o TradingView\n_c4 = MiniTradingViewChart;\nexport default _c5 = /*#__PURE__*/memo(TradingViewChart);\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"TradingViewChart\");\n$RefreshReg$(_c2, \"SimpleTradingViewChart\");\n$RefreshReg$(_c3, \"AdvancedTradingViewChart\");\n$RefreshReg$(_c4, \"MiniTradingViewChart\");\n$RefreshReg$(_c5, \"%default%\");","map":{"version":3,"names":["React","useEffect","useRef","memo","jsxDEV","_jsxDEV","TradingViewChart","symbol","width","height","interval","theme","style","locale","timezone","toolbar_bg","enable_publishing","withdateranges","hide_side_toolbar","allow_symbol_change","save_image","className","studies","drawings_access","show_popup_button","studies_overrides","time_frames","text","resolution","charts_storage_url","charts_storage_api_version","client_id","user_id","fullscreen","autosize","container_id","hide_top_toolbar","enabled_features","disabled_features","_s","containerRef","scriptRef","widgetRef","current","remove","error","console","warn","innerHTML","createWidget","window","TradingView","setTimeout","config","id","widget","length","onChartReady","forEach","study","chart","createStudy","existingScript","document","querySelector","addEventListener","script","createElement","src","async","onload","onerror","head","appendChild","containerId","replace","Date","now","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","href","rel","target","_c","SimpleTradingViewChart","trim","formatSymbolForTradingView","inputSymbol","cleanSymbol","toUpperCase","symbolMap","includes","endsWith","baseSymbol","match","formattedSymbol","_c2","AdvancedTradingViewChart","defaultStudies","studiesOverrides","_c3","MiniTradingViewChart","_c4","_c5","$RefreshReg$"],"sources":["C:/Users/ferna/INVEST_TRACKER/frontend/src/components/TradingViewChart.tsx"],"sourcesContent":["import React, { useEffect, useRef, memo } from 'react';\r\nimport { TradingViewConfig } from '../types';\r\n\r\ninterface TradingViewChartProps {\r\n  symbol: string;\r\n  width?: string | number;\r\n  height?: string | number;\r\n  interval?: string;\r\n  theme?: 'light' | 'dark';\r\n  style?: string;\r\n  locale?: string;\r\n  timezone?: string;\r\n  toolbar_bg?: string;\r\n  enable_publishing?: boolean;\r\n  withdateranges?: boolean;\r\n  hide_side_toolbar?: boolean;\r\n  allow_symbol_change?: boolean;\r\n  save_image?: boolean;\r\n  className?: string;\r\n  // Novas op√ß√µes avan√ßadas\r\n  studies?: string[];\r\n  drawings_access?: boolean;\r\n  show_popup_button?: boolean;\r\n  studies_overrides?: Record<string, any>;\r\n  time_frames?: Array<{ text: string; resolution: string; }>;\r\n  charts_storage_url?: string;\r\n  charts_storage_api_version?: string;\r\n  client_id?: string;\r\n  user_id?: string;\r\n  fullscreen?: boolean;\r\n  autosize?: boolean;\r\n  container_id?: string;\r\n  hide_top_toolbar?: boolean;\r\n  enabled_features?: string[];\r\n  disabled_features?: string[];\r\n}\r\n\r\nconst TradingViewChart: React.FC<TradingViewChartProps> = ({\r\n  symbol,\r\n  width = '100%',\r\n  height = 400,\r\n  interval = 'D',\r\n  theme = 'light',\r\n  style = '1',\r\n  locale = 'pt_BR',\r\n  timezone = 'America/Sao_Paulo',\r\n  toolbar_bg = '#f1f3f6',\r\n  enable_publishing = false,\r\n  withdateranges = true,\r\n  hide_side_toolbar = false,\r\n  allow_symbol_change = true,\r\n  save_image = false,\r\n  className = '',\r\n  // Novas op√ß√µes avan√ßadas\r\n  studies = [],\r\n  drawings_access = true,\r\n  show_popup_button = true,\r\n  studies_overrides = {},\r\n  time_frames = [\r\n    { text: '1D', resolution: '1' },\r\n    { text: '1W', resolution: 'W' },\r\n    { text: '1M', resolution: 'M' },\r\n  ],\r\n  charts_storage_url = 'https://saveload.tradingview.com',\r\n  charts_storage_api_version = '1.1',\r\n  client_id = 'investtracker.app',\r\n  user_id = 'public_user',\r\n  fullscreen = false,\r\n  autosize = true,\r\n  container_id,\r\n  hide_top_toolbar = false,\r\n  enabled_features = [],\r\n  disabled_features = [],\r\n}) => {\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const scriptRef = useRef<HTMLScriptElement | null>(null);\r\n  const widgetRef = useRef<any>(null);\r\n\r\n  useEffect(() => {\r\n    // Limpar widget anterior se existir\r\n    if (widgetRef.current) {\r\n      try {\r\n        widgetRef.current.remove();\r\n      } catch (error) {\r\n        console.warn('Erro ao remover widget anterior:', error);\r\n      }\r\n    }\r\n\r\n    // Limpar container\r\n    if (containerRef.current) {\r\n      containerRef.current.innerHTML = '';\r\n    }\r\n\r\n    // Fun√ß√£o para criar o widget\r\n    const createWidget = () => {\r\n      if (!containerRef.current || !window.TradingView) {\r\n        console.warn('TradingView n√£o dispon√≠vel ou container n√£o encontrado');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // Aguardar um pouco para garantir que o DOM est√° pronto\r\n        setTimeout(() => {\r\n          if (!containerRef.current) return;\r\n          \r\n          // Configura√ß√µes avan√ßadas para o TradingView\r\n          const config: TradingViewConfig & Record<string, any> = {\r\n            autosize: autosize,\r\n            symbol: symbol,\r\n            interval: interval,\r\n            timezone: timezone,\r\n            theme: theme,\r\n            style: style,\r\n            locale: locale,\r\n            toolbar_bg: toolbar_bg,\r\n            enable_publishing: enable_publishing,\r\n            withdateranges: withdateranges,\r\n            hide_side_toolbar: hide_side_toolbar,\r\n            allow_symbol_change: allow_symbol_change,\r\n            save_image: save_image,\r\n            container_id: containerRef.current.id,\r\n            width: width,\r\n            height: height,\r\n            fullscreen: fullscreen,\r\n            hide_top_toolbar: hide_top_toolbar,\r\n            show_popup_button: show_popup_button,\r\n            time_frames: time_frames,\r\n            enabled_features: [\r\n              'study_templates',\r\n              'use_localstorage_for_settings',\r\n              'chart_property_page_trading',\r\n              'chart_property_page_scales',\r\n              'chart_property_page_style',\r\n              'chart_property_page_background',\r\n              'chart_property_page_timezone_sessions',\r\n              'chart_property_page_events',\r\n              'create_volume_indicator_by_default',\r\n              ...enabled_features\r\n            ],\r\n            disabled_features: disabled_features,\r\n            charts_storage_url: charts_storage_url,\r\n            charts_storage_api_version: charts_storage_api_version,\r\n            client_id: client_id,\r\n            user_id: user_id,\r\n            studies_overrides: studies_overrides,\r\n          };\r\n\r\n          // Criar o widget\r\n          widgetRef.current = new window.TradingView.widget(config);\r\n\r\n          // Adicionar indicadores t√©cnicos se especificados\r\n          if (studies.length > 0 && widgetRef.current) {\r\n            widgetRef.current.onChartReady(() => {\r\n              studies.forEach(study => {\r\n                widgetRef.current.chart().createStudy(study);\r\n              });\r\n            });\r\n          }\r\n        }, 100);\r\n      } catch (error) {\r\n        console.error('Erro ao criar widget TradingView:', error);\r\n        // Mostrar mensagem de erro no container\r\n        if (containerRef.current) {\r\n          containerRef.current.innerHTML = `\r\n            <div style=\"display: flex; align-items: center; justify-content: center; height: 100%; background: #f8f9fa; border: 1px solid #dee2e6; border-radius: 4px;\">\r\n              <div style=\"text-align: center; color: #6c757d;\">\r\n                <div style=\"font-size: 24px; margin-bottom: 8px;\">üìä</div>\r\n                <div>Gr√°fico indispon√≠vel</div>\r\n                <div style=\"font-size: 12px; margin-top: 4px;\">Erro ao carregar TradingView</div>\r\n              </div>\r\n            </div>\r\n          `;\r\n        }\r\n      }\r\n    };\r\n\r\n    // Verificar se o script do TradingView j√° foi carregado\r\n    if (window.TradingView) {\r\n      createWidget();\r\n    } else {\r\n      // Verificar se j√° existe um script sendo carregado\r\n      const existingScript = document.querySelector('script[src=\"https://s3.tradingview.com/tv.js\"]');\r\n      \r\n      if (existingScript) {\r\n        // Script j√° existe, aguardar carregamento\r\n        existingScript.addEventListener('load', createWidget);\r\n      } else {\r\n        // Carregar script do TradingView\r\n        const script = document.createElement('script');\r\n        script.src = 'https://s3.tradingview.com/tv.js';\r\n        script.async = true;\r\n        script.onload = createWidget;\r\n        script.onerror = () => {\r\n          console.error('Erro ao carregar script do TradingView');\r\n          // Mostrar mensagem de erro\r\n          if (containerRef.current) {\r\n            containerRef.current.innerHTML = `\r\n              <div style=\"display: flex; align-items: center; justify-content: center; height: 100%; background: #f8f9fa; border: 1px solid #dee2e6; border-radius: 4px;\">\r\n                <div style=\"text-align: center; color: #6c757d;\">\r\n                  <div style=\"font-size: 24px; margin-bottom: 8px;\">‚ö†Ô∏è</div>\r\n                  <div>Erro de conex√£o</div>\r\n                  <div style=\"font-size: 12px; margin-top: 4px;\">N√£o foi poss√≠vel carregar o TradingView</div>\r\n                </div>\r\n              </div>\r\n            `;\r\n          }\r\n        };\r\n        \r\n        document.head.appendChild(script);\r\n        scriptRef.current = script;\r\n      }\r\n    }\r\n\r\n    // Cleanup\r\n    return () => {\r\n      if (widgetRef.current) {\r\n        try {\r\n          widgetRef.current.remove();\r\n        } catch (error) {\r\n          console.warn('Erro ao limpar widget:', error);\r\n        }\r\n      }\r\n    };\r\n  }, [symbol, interval, theme, style, width, height, studies, enabled_features, disabled_features]);\r\n\r\n  // Gerar ID √∫nico para o container\r\n  const containerId = container_id || `tradingview_${symbol.replace(/[^a-zA-Z0-9]/g, '_')}_${Date.now()}`;\r\n\r\n  return (\r\n    <div className={`tradingview-widget-container ${className}`}>\r\n      <div\r\n        ref={containerRef}\r\n        id={containerId}\r\n        className=\"tradingview-widget\"\r\n        style={{\r\n          width: typeof width === 'number' ? `${width}px` : width,\r\n          height: typeof height === 'number' ? `${height}px` : height,\r\n        }}\r\n      />\r\n      <div className=\"tradingview-widget-copyright\">\r\n        <a\r\n          href={`https://www.tradingview.com/symbols/${symbol}/`}\r\n          rel=\"noopener nofollow\"\r\n          target=\"_blank\"\r\n          className=\"text-xs text-gray-500 hover:text-gray-700\"\r\n        >\r\n          <span className=\"blue-text\">{symbol}</span> por TradingView\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Componente simplificado para gr√°fico b√°sico\r\nexport const SimpleTradingViewChart: React.FC<{\r\n  symbol: string;\r\n  height?: number;\r\n  theme?: 'light' | 'dark';\r\n}> = ({ symbol, height = 300, theme = 'light' }) => {\r\n  // Valida√ß√£o do s√≠mbolo\r\n  if (!symbol || symbol.trim() === '') {\r\n    return (\r\n      <div className=\"flex items-center justify-center bg-gray-50 border border-gray-200 rounded-lg\" style={{ height }}>\r\n        <div className=\"text-center\">\r\n          <div className=\"text-4xl mb-4\">üìä</div>\r\n          <p className=\"text-gray-500\">S√≠mbolo inv√°lido</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Converter s√≠mbolos brasileiros para formato TradingView\r\n  const formatSymbolForTradingView = (inputSymbol: string): string => {\r\n    const cleanSymbol = inputSymbol.trim().toUpperCase();\r\n    \r\n    // Mapeamento de s√≠mbolos para TradingView\r\n    const symbolMap: { [key: string]: string } = {\r\n      // √çndices Brasileiros\r\n      'IBOVESPA': 'BMFBOVESPA:IBOV',\r\n      'IFIX': 'BMFBOVESPA:IFIX',\r\n      'SMLL': 'BMFBOVESPA:SMLL',\r\n      'IDIV': 'BMFBOVESPA:IDIV',\r\n      \r\n      // A√ß√µes Brasileiras\r\n      'BOVA11': 'BMFBOVESPA:BOVA11',\r\n      'PETR4': 'BMFBOVESPA:PETR4',\r\n      'VALE3': 'BMFBOVESPA:VALE3',\r\n      'ITUB4': 'BMFBOVESPA:ITUB4',\r\n      'BBDC4': 'BMFBOVESPA:BBDC4',\r\n      \r\n      // Commodities - Metais Preciosos\r\n      'GC=F': 'COMEX:GC1!',\r\n      'SI=F': 'COMEX:SI1!',\r\n      'PL=F': 'NYMEX:PL1!',\r\n      'PA=F': 'NYMEX:PA1!',\r\n      \r\n      // Commodities - Energia\r\n      'CL=F': 'NYMEX:CL1!',\r\n      'BZ=F': 'ICE:BRN1!',\r\n      'NG=F': 'NYMEX:NG1!',\r\n      \r\n      // Commodities - Metais Industriais\r\n      'HG=F': 'COMEX:HG1!',\r\n      \r\n      // Commodities - Agricultura\r\n      'ZC=F': 'CBOT:ZC1!',\r\n      'ZS=F': 'CBOT:ZS1!',\r\n      'ZW=F': 'CBOT:ZW1!',\r\n      'KC=F': 'ICEUS:KC1!',\r\n      'SB=F': 'ICEUS:SB1!',\r\n      'CC=F': 'ICEUS:CC1!',\r\n      'CT=F': 'ICEUS:CT1!',\r\n      'OJ=F': 'ICEUS:OJ1!',\r\n      \r\n      // Commodities - Outros\r\n      'LBS=F': 'CME:LBS1!',\r\n      \r\n      // Criptomoedas\r\n      'BTC-USD': 'BINANCE:BTCUSDT',\r\n      'ETH-USD': 'BINANCE:ETHUSDT',\r\n      'BNB-USD': 'BINANCE:BNBUSDT',\r\n      'ADA-USD': 'BINANCE:ADAUSDT',\r\n      'SOL-USD': 'BINANCE:SOLUSDT',\r\n      'XRP-USD': 'BINANCE:XRPUSDT',\r\n      'DOT-USD': 'BINANCE:DOTUSDT',\r\n      'DOGE-USD': 'BINANCE:DOGEUSDT',\r\n      'AVAX-USD': 'BINANCE:AVAXUSDT',\r\n      'MATIC-USD': 'BINANCE:MATICUSDT',\r\n      \r\n      // Forex\r\n      'EURUSD=X': 'FX:EURUSD',\r\n      'GBPUSD=X': 'FX:GBPUSD',\r\n      'USDJPY=X': 'FX:USDJPY',\r\n      'USDCAD=X': 'FX:USDCAD',\r\n      'AUDUSD=X': 'FX:AUDUSD',\r\n      'USDBRL=X': 'FX:USDBRL',\r\n      'EURBRL=X': 'FX:EURBRL',\r\n      \r\n      // √çndices Internacionais\r\n      '^GSPC': 'SP:SPX',\r\n      '^DJI': 'DJ:DJI',\r\n      '^IXIC': 'NASDAQ:IXIC',\r\n      '^FTSE': 'FTSE:UKX',\r\n      '^GDAXI': 'XETR:DAX',\r\n      '^N225': 'TVC:NI225',\r\n      '^HSI': 'HSI:HSI',\r\n      \r\n      // T√≠tulos e Bonds\r\n      '^TNX': 'TVC:TNX',\r\n      '^FVX': 'TVC:FVX',\r\n      '^IRX': 'TVC:IRX',\r\n      '^TYX': 'TVC:TYX',\r\n      \r\n      // Forex Adicional\r\n      'USDCHF=X': 'FX:USDCHF',\r\n      'NZDUSD=X': 'FX:NZDUSD',\r\n      'EURJPY=X': 'FX:EURJPY',\r\n      'GBPJPY=X': 'FX:GBPJPY',\r\n      'EURGBP=X': 'FX:EURGBP',\r\n      \r\n      // Futuros BMF (B3)\r\n      'WDO=F': 'BMFBOVESPA:WDO1!',\r\n      'DOL=F': 'BMFBOVESPA:DOL1!',\r\n      'WIN=F': 'BMFBOVESPA:WIN1!',\r\n      'IND=F': 'BMFBOVESPA:IND1!',\r\n      'BGI=F': 'BMFBOVESPA:BGI1!',\r\n      'CCM=F': 'BMFBOVESPA:CCM1!',\r\n      'ICF=F': 'BMFBOVESPA:ICF1!',\r\n      'DI1=F': 'BMFBOVESPA:DI11!'\r\n    };\r\n    \r\n    // Se o s√≠mbolo j√° tem prefixo, usar como est√°\r\n    if (cleanSymbol.includes(':')) {\r\n      return cleanSymbol;\r\n    }\r\n    \r\n    // Se est√° no mapeamento, usar o valor mapeado\r\n    if (symbolMap[cleanSymbol]) {\r\n      return symbolMap[cleanSymbol];\r\n    }\r\n    \r\n    // Se termina com .SA, converter para formato BMFBOVESPA\r\n    if (cleanSymbol.endsWith('.SA')) {\r\n      const baseSymbol = cleanSymbol.replace('.SA', '');\r\n      return `BMFBOVESPA:${baseSymbol}`;\r\n    }\r\n    \r\n    // Para outros s√≠mbolos brasileiros, assumir BMFBOVESPA\r\n    if (cleanSymbol.match(/^[A-Z]{4}[0-9]{1,2}$/)) {\r\n      return `BMFBOVESPA:${cleanSymbol}`;\r\n    }\r\n    \r\n    // Retornar como est√° para s√≠mbolos internacionais\r\n    return cleanSymbol;\r\n  };\r\n\r\n  const formattedSymbol = formatSymbolForTradingView(symbol);\r\n\r\n  return (\r\n    <TradingViewChart\r\n      symbol={formattedSymbol}\r\n      height={height}\r\n      theme={theme}\r\n      hide_side_toolbar={true}\r\n      withdateranges={false}\r\n      allow_symbol_change={false}\r\n      save_image={false}\r\n      enable_publishing={false}\r\n    />\r\n  );\r\n};\r\n\r\n// Componente para gr√°fico avan√ßado\r\nexport const AdvancedTradingViewChart: React.FC<{\r\n  symbol: string;\r\n  height?: number;\r\n  theme?: 'light' | 'dark';\r\n  interval?: string;\r\n  studies?: string[];\r\n}> = ({ symbol, height = 500, theme = 'light', interval = 'D', studies = [] }) => {\r\n  // Indicadores t√©cnicos comuns\r\n  const defaultStudies = studies.length > 0 ? studies : [\r\n    'Volume',\r\n    'Moving Average Exponential@tv-basicstudies',\r\n  ];\r\n\r\n  // Configura√ß√µes avan√ßadas para o gr√°fico\r\n  const studiesOverrides = {\r\n    'volume.volume.color.0': 'rgba(255, 82, 82, 0.5)',\r\n    'volume.volume.color.1': 'rgba(76, 175, 80, 0.5)',\r\n    'volume.volume.transparency': 50,\r\n    'volume.volume ma.color': '#FF9800',\r\n    'volume.volume ma.transparency': 30,\r\n    'volume.volume ma.linewidth': 2,\r\n    'volume.show ma': true,\r\n    'volume.options.showStudyArguments': true,\r\n    'moving average exponential.length': 21,\r\n    'moving average exponential.plottype': 'line',\r\n  };\r\n\r\n  return (\r\n    <TradingViewChart\r\n      symbol={symbol}\r\n      height={height}\r\n      theme={theme}\r\n      interval={interval}\r\n      hide_side_toolbar={false}\r\n      withdateranges={true}\r\n      allow_symbol_change={true}\r\n      save_image={true}\r\n      enable_publishing={false}\r\n      studies={defaultStudies}\r\n      studies_overrides={studiesOverrides}\r\n      enabled_features={[\r\n        'study_templates',\r\n        'use_localstorage_for_settings',\r\n        'create_volume_indicator_by_default',\r\n        'header_widget',\r\n        'left_toolbar',\r\n        'control_bar',\r\n        'timeframes_toolbar',\r\n        'display_market_status',\r\n        'legend_widget',\r\n        'header_chart_type',\r\n        'header_compare',\r\n        'header_indicators',\r\n        'header_settings',\r\n        'header_screenshot',\r\n        'header_fullscreen_button',\r\n        'show_chart_property_page',\r\n        'property_pages',\r\n      ]}\r\n      time_frames={[\r\n        { text: '1D', resolution: '1' },\r\n        { text: '1W', resolution: 'W' },\r\n        { text: '1M', resolution: 'M' },\r\n        { text: '3M', resolution: '3M' },\r\n        { text: '6M', resolution: '6M' },\r\n        { text: 'YTD', resolution: '12M' },\r\n        { text: '1Y', resolution: '12M' },\r\n        { text: '5Y', resolution: '60M' },\r\n        { text: 'ALL', resolution: 'ALL' },\r\n      ]}\r\n    />\r\n  );\r\n};\r\n\r\n// Componente para mini gr√°fico\r\nexport const MiniTradingViewChart: React.FC<{\r\n  symbol: string;\r\n  width?: number;\r\n  height?: number;\r\n  theme?: 'light' | 'dark';\r\n}> = ({ symbol, width = 300, height = 200, theme = 'light' }) => {\r\n  return (\r\n    <TradingViewChart\r\n      symbol={symbol}\r\n      width={width}\r\n      height={height}\r\n      theme={theme}\r\n      hide_side_toolbar={true}\r\n      withdateranges={false}\r\n      allow_symbol_change={false}\r\n      save_image={false}\r\n      enable_publishing={false}\r\n      style=\"2\" // √Årea\r\n    />\r\n  );\r\n};\r\n\r\n// Declara√ß√£o de tipos para o TradingView\r\ndeclare global {\r\n  interface Window {\r\n    TradingView: {\r\n      widget: new (config: TradingViewConfig & Record<string, any>) => any;\r\n    };\r\n  }\r\n}\r\n\r\nexport default memo(TradingViewChart);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}