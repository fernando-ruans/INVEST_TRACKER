{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ferna\\\\INVEST_TRACKER\\\\frontend\\\\src\\\\components\\\\InvestingCalendarWidget.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useTheme } from '../contexts/ThemeContext';\n\n// Hook para detectar o tamanho da tela\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useWindowSize = () => {\n  _s();\n  const [windowSize, setWindowSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  return windowSize;\n};\n_s(useWindowSize, \"BicH+wOp3ArG+krXTdh1X7jq7PU=\");\nconst InvestingCalendarWidget = ({\n  width = '100%',\n  height,\n  theme,\n  timeZone = 'America/Sao_Paulo',\n  timeSpan = 'thisWeek',\n  showCountries = ['BR', 'US', 'EU', 'GB', 'CN', 'JP'],\n  importanceLevel = 3,\n  className = ''\n}) => {\n  _s2();\n  const {\n    theme: contextTheme\n  } = useTheme();\n  const currentTheme = theme || contextTheme;\n  const {\n    width: screenWidth\n  } = useWindowSize();\n\n  // Calcula a altura responsiva se não for fornecida\n  const responsiveHeight = height || (screenWidth < 640 ? 400 : screenWidth < 768 ? 500 : screenWidth < 1024 ? 600 : 800);\n\n  // URL do widget econômico do TradingView\n  // Usando o widget oficial em vez do iframe direto para evitar problemas de X-Frame-Options\n  const widgetId = `tradingview-widget-${Math.random().toString(36).substring(2, 15)}`;\n\n  // Configuração do widget\n  const widgetConfig = {\n    \"colorTheme\": currentTheme === 'dark' ? 'dark' : 'light',\n    \"isTransparent\": false,\n    \"width\": \"100%\",\n    \"height\": \"100%\",\n    \"locale\": \"pt\",\n    \"importanceFilter\": importanceLevel.toString(),\n    \"currencyFilter\": \"USD,EUR,BRL,GBP,CNY,JPY\"\n  };\n\n  // Configuração em formato de string para o script\n  const widgetConfigString = JSON.stringify(widgetConfig);\n\n  // Referência para o contêiner do widget\n  const containerRef = useRef(null);\n  useEffect(() => {\n    // Limpar qualquer conteúdo anterior\n    if (containerRef.current) {\n      containerRef.current.innerHTML = '';\n    }\n\n    // Criar a estrutura do widget\n    const widgetContainer = document.createElement('div');\n    widgetContainer.className = 'tradingview-widget-container';\n    widgetContainer.id = widgetId;\n    const widgetDiv = document.createElement('div');\n    widgetDiv.className = 'tradingview-widget-container__widget';\n\n    // Criar o script do TradingView\n    const script = document.createElement('script');\n    script.src = 'https://s3.tradingview.com/external-embedding/embed-widget-events.js';\n    script.async = true;\n    script.innerHTML = widgetConfigString;\n\n    // Montar a estrutura\n    widgetContainer.appendChild(widgetDiv);\n    widgetContainer.appendChild(script);\n\n    // Adicionar ao DOM\n    if (containerRef.current) {\n      containerRef.current.appendChild(widgetContainer);\n    }\n\n    // Limpar ao desmontar\n    return () => {\n      if (containerRef.current) {\n        containerRef.current.innerHTML = '';\n      }\n    };\n  }, [widgetId, widgetConfigString]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `investing-calendar-widget-container ${className}`,\n    style: {\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      className: \"investing-calendar-widget\",\n      style: {\n        width: typeof width === 'number' ? `${width}px` : width,\n        height: typeof responsiveHeight === 'number' ? `${responsiveHeight}px` : responsiveHeight,\n        background: contextTheme === 'dark' ? '#1f2937' : '#fff',\n        borderRadius: 8,\n        minHeight: screenWidth < 640 ? 300 : 400,\n        overflow: 'hidden'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"investing-widget-copyright\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://www.tradingview.com/economic-calendar/\",\n        rel: \"noopener nofollow\",\n        target: \"_blank\",\n        className: \"text-xs text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300\",\n        children: \"Calend\\xE1rio Econ\\xF4mico por TradingView\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s2(InvestingCalendarWidget, \"INqaZL2v+H0TFWRAPyErrk9ugjs=\", false, function () {\n  return [useTheme, useWindowSize];\n});\n_c = InvestingCalendarWidget;\nexport default InvestingCalendarWidget;\nvar _c;\n$RefreshReg$(_c, \"InvestingCalendarWidget\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useTheme","jsxDEV","_jsxDEV","useWindowSize","_s","windowSize","setWindowSize","width","window","innerWidth","height","innerHeight","handleResize","addEventListener","removeEventListener","InvestingCalendarWidget","theme","timeZone","timeSpan","showCountries","importanceLevel","className","_s2","contextTheme","currentTheme","screenWidth","responsiveHeight","widgetId","Math","random","toString","substring","widgetConfig","widgetConfigString","JSON","stringify","containerRef","current","innerHTML","widgetContainer","document","createElement","id","widgetDiv","script","src","async","appendChild","style","position","children","ref","background","borderRadius","minHeight","overflow","fileName","_jsxFileName","lineNumber","columnNumber","href","rel","target","_c","$RefreshReg$"],"sources":["C:/Users/ferna/INVEST_TRACKER/frontend/src/components/InvestingCalendarWidget.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { useTheme } from '../contexts/ThemeContext';\r\n\r\n// Hook para detectar o tamanho da tela\r\nconst useWindowSize = () => {\r\n  const [windowSize, setWindowSize] = useState({\r\n    width: window.innerWidth,\r\n    height: window.innerHeight,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      });\r\n    };\r\n    \r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowSize;\r\n};\r\n\r\ninterface InvestingCalendarWidgetProps {\r\n  width?: string | number;\r\n  height?: string | number;\r\n  theme?: 'light' | 'dark';\r\n  timeZone?: string;\r\n  timeSpan?: 'today' | 'tomorrow' | 'thisWeek' | 'nextWeek';\r\n  showCountries?: string[];\r\n  importanceLevel?: 1 | 2 | 3; // 1 = low, 2 = medium, 3 = high\r\n  className?: string;\r\n}\r\n\r\nconst InvestingCalendarWidget: React.FC<InvestingCalendarWidgetProps> = ({\r\n  width = '100%',\r\n  height,\r\n  theme,\r\n  timeZone = 'America/Sao_Paulo',\r\n  timeSpan = 'thisWeek',\r\n  showCountries = ['BR', 'US', 'EU', 'GB', 'CN', 'JP'],\r\n  importanceLevel = 3,\r\n  className = '',\r\n}) => {\r\n  const { theme: contextTheme } = useTheme();\r\n  const currentTheme = theme || contextTheme;\r\n  const { width: screenWidth } = useWindowSize();\r\n  \r\n  // Calcula a altura responsiva se não for fornecida\r\n  const responsiveHeight = height || (screenWidth < 640 ? 400 : \r\n                                     screenWidth < 768 ? 500 : \r\n                                     screenWidth < 1024 ? 600 : 800);\r\n  \r\n  // URL do widget econômico do TradingView\r\n  // Usando o widget oficial em vez do iframe direto para evitar problemas de X-Frame-Options\r\n  const widgetId = `tradingview-widget-${Math.random().toString(36).substring(2, 15)}`;\r\n  \r\n  // Configuração do widget\r\n  const widgetConfig = {\r\n    \"colorTheme\": currentTheme === 'dark' ? 'dark' : 'light',\r\n    \"isTransparent\": false,\r\n    \"width\": \"100%\",\r\n    \"height\": \"100%\",\r\n    \"locale\": \"pt\",\r\n    \"importanceFilter\": importanceLevel.toString(),\r\n    \"currencyFilter\": \"USD,EUR,BRL,GBP,CNY,JPY\"\r\n  };\r\n  \r\n  // Configuração em formato de string para o script\r\n  const widgetConfigString = JSON.stringify(widgetConfig);\r\n\r\n\r\n  // Referência para o contêiner do widget\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    // Limpar qualquer conteúdo anterior\r\n    if (containerRef.current) {\r\n      containerRef.current.innerHTML = '';\r\n    }\r\n\r\n    // Criar a estrutura do widget\r\n    const widgetContainer = document.createElement('div');\r\n    widgetContainer.className = 'tradingview-widget-container';\r\n    widgetContainer.id = widgetId;\r\n\r\n    const widgetDiv = document.createElement('div');\r\n    widgetDiv.className = 'tradingview-widget-container__widget';\r\n\r\n    // Criar o script do TradingView\r\n    const script = document.createElement('script');\r\n    script.src = 'https://s3.tradingview.com/external-embedding/embed-widget-events.js';\r\n    script.async = true;\r\n    script.innerHTML = widgetConfigString;\r\n\r\n    // Montar a estrutura\r\n    widgetContainer.appendChild(widgetDiv);\r\n    widgetContainer.appendChild(script);\r\n\r\n    // Adicionar ao DOM\r\n    if (containerRef.current) {\r\n      containerRef.current.appendChild(widgetContainer);\r\n    }\r\n\r\n    // Limpar ao desmontar\r\n    return () => {\r\n      if (containerRef.current) {\r\n        containerRef.current.innerHTML = '';\r\n      }\r\n    };\r\n  }, [widgetId, widgetConfigString]);\r\n\r\n  return (\r\n    <div className={`investing-calendar-widget-container ${className}`} style={{ position: 'relative' }}>\r\n      <div\r\n        ref={containerRef}\r\n        className=\"investing-calendar-widget\"\r\n        style={{\r\n          width: typeof width === 'number' ? `${width}px` : width,\r\n          height: typeof responsiveHeight === 'number' ? `${responsiveHeight}px` : responsiveHeight,\r\n          background: contextTheme === 'dark' ? '#1f2937' : '#fff',\r\n          borderRadius: 8,\r\n          minHeight: screenWidth < 640 ? 300 : 400,\r\n          overflow: 'hidden',\r\n        }}\r\n      />\r\n      <div className=\"investing-widget-copyright\">\r\n        <a\r\n          href=\"https://www.tradingview.com/economic-calendar/\"\r\n          rel=\"noopener nofollow\"\r\n          target=\"_blank\"\r\n          className=\"text-xs text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300\"\r\n        >\r\n          Calendário Econômico por TradingView\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InvestingCalendarWidget;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}